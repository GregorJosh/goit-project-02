{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,UCAAD,EAAAC,EAAA,UAEAC,QAAIC,qBAAuBC,eAAgBC,EAAOL,EAAAE,QAAII,aACpD,MAAMC,EAAmBC,SAASC,eAChCT,EAAAE,QAAIQ,+BAGNV,EAAAE,QAAIS,QAAQC,SAEZ,MAAMC,QAAeb,EAAAE,QAAIY,IAAIC,IAAI,sBAAsBV,KACvDW,QAAQC,IAAIJ,GACZ,MAAMK,QAAmBlB,EAAAE,QAAIiB,eAAeN,GAE5CN,EAAiBa,mBAAmB,aAAcF,GAElDlB,EAAAE,QAAIS,QAAQU,SACZrB,EAAAE,QAAIoB,WAAaT,EAAOU,W,EAG1BvB,EAAAE,QAAIsB,oBAAsBpB,eAAgBqB,GACxC,MAAMC,QAAoB1B,EAAAE,QAAIY,IAAIC,IAAI,SAAWU,GAC3CE,EAASD,EAAYE,YAErBC,EAAc,GAEpB,IAAK,MAAMC,KAASJ,EAAYK,OAC9BF,EAAYG,KAAKF,EAAMG,MAEzB,IAAIC,EAASL,EAEVK,EADCL,EAAYM,OAAS,EACd,GAAGN,EAAY,MAAMA,EAAY,WAEjCA,EAEX,MAAMO,EAAYV,EAAYW,aAAaC,MAAM,KAAK,GAChDC,EAAQb,EAAYc,eACZd,EAAYe,aACPf,EAAYgB,WACjBhB,EAAYiB,SAE1B,MAAO,qCACyB3C,EAAAE,QAAI0C,kBAAkBnB,gHAEJE,yHAGpBY,0CACEL,OAAYE,gC,EAK9CpC,EAAAE,QAAIiB,eAAiBf,eAAgByC,GACnC,IAAIC,EAAO,GAEX,IAAK,MAAMC,KAASF,EAAYG,QAC9BF,SAAc9C,EAAAE,QAAIsB,oBAAoBuB,EAAME,IAG9C,OAAOH,C,EAET9C,EAAAE,QAAIC,wBC7DJH,EAAAC,EAAA,UAWAC,QAAIgD,mBAAqB9C,eAAgB+C,GACvCnD,EAAAE,QAAIS,QAAQC,SACZZ,EAAAE,QAAIkD,eAAiBD,EACrB,MAAME,QAAoBrD,EAAAE,QAAIY,IAAIC,IAChC,wBAAwBoC,UAAgBnD,EAAAE,QAAII,eAI9C,OAFAN,EAAAE,QAAIS,QAAQU,SAERgC,EAAYC,cAAgB,GAC9BtD,EAAAE,QAAIoB,WAAa+B,EAAY9B,YACtB8B,IAGPrD,EAAAE,QAAIqD,iBACG,G,ECzBXvD,EAAAC,EAAA,SAEA,MAAMuD,EAAYhD,SAASiD,cAAc,cAEzCzD,EAAAE,QAAIqD,eAAiB,WACnBC,EAAUE,UAAUrC,OAAO,S,EAG7BrB,EAAAE,QAAIyD,gBAAkB,WACpBH,EAAUE,UAAUE,IAAI,S,ECT1B5D,EAAAC,EAAA,SAEsBO,SAASiD,cAAc,kBAC/BI,iBAAiB,SAE/B,SAA8BC,GAC1B,MAAMC,EAAyBD,EAAME,OACrC,GAAwC,WAApCD,EAAuBE,SAAuB,CAC9C,MAAMC,EAAWH,EAAuBd,GAEvB,mBAAbiB,EACIlE,EAAAE,QAAII,YAAc,IACtBU,QAAQC,IAAI,qBACZjB,EAAAE,QAAII,YAAcN,EAAAE,QAAII,YAAc,GAEhB,oBAAb4D,GACPlD,QAAQC,IAAI,kBACZjB,EAAAE,QAAII,YAAcN,EAAAE,QAAII,YAAc,GAGhCN,EAAAE,QAAII,YAAcyD,EAAuBI,MAI7CnE,EAAAE,QAAIkD,eACJpD,EAAAE,QAAIgD,mBAAmBlD,EAAAE,QAAIkD,gBAE3BpD,EAAAE,QAAIC,sB,2BJzBhBH,EAAAE,QAAIkE,eAAiB","sources":["src/index.js","src/js/gallery.js","src/js/keyword.js","src/js/search-form.js","src/js/pagination-gallery.js"],"sourcesContent":["import app from './js/global/app';\n\napp.currentWebPage = 'home';\n\nimport './js/gallery';\nimport './js/keyword';\nimport './js/search-form';\nimport './js/pagination-gallery';\nimport './js/footer';\nimport './js/movie-window';\n","import app from './global/app';\n\napp.getMoviesTodayTrends = async function (page = app.currentPage) {\n  const galleryULElement = document.getElementById(\n    app.MOVIE_CARDS_PARENT_ELEMENT_ID\n  );\n\n  app.Loading.circle();\n\n  const movies = await app.api.get(`movie/popular?page=${page}`);\n  console.log(movies);\n  const movieCards = await app.showMovieCards(movies);\n\n  galleryULElement.insertAdjacentHTML('afterbegin', movieCards);\n\n  app.Loading.remove();\n  app.totalPages = movies.total_pages;\n};\n\napp.renderMovieCardHTML = async function (movieId) {\n  const movieObject = await app.api.get('movie/' + movieId);\n  const poster = movieObject.poster_path;\n  const posterUrl = 'https://image.tmdb.org/t/p/w500';\n  const movieGenres = [];\n\n  for (const genre of movieObject.genres) {\n    movieGenres.push(genre.name);\n  }\n  let movieG = movieGenres;\n  if (movieGenres.length > 2) {\n     movieG= `${movieGenres[0]},${movieGenres[1]},Other`;\n  } else {\n     movieG= movieGenres;\n  }  \n  const movieYear = movieObject.release_date.split('-')[0];\n  const title = movieObject.original_title;\n  const votes = movieObject.vote_average;\n  const popularity = movieObject.popularity;\n  const about = movieObject.overview;\n\n  return `\n   <li class = \"movie-card\" id=\"${app.createMovieCardId(movieId)}\">\n       <div class=\"movie-thumb\">\n        <img class=\"movie-image\" src=\"${posterUrl}${poster}\" alt=\"Poster image\" loading=\"lazy\" />\n       </div>\n      <div class=\"movie-info\">\n        <p class=\"movie-name\">${title}</p>\n        <p class=\"movie-genres\">${movieG} | ${movieYear}</p>\n      </div>\n    </li>`;\n};\n\napp.showMovieCards = async function (moviesArray) {\n  let html = '';\n\n  for (const movie of moviesArray.results) {\n    html += await app.renderMovieCardHTML(movie.id);\n  }\n\n  return html;\n};\napp.getMoviesTodayTrends();\n","import app from './global/app';\n\n// app.getMoviesByKeyWord = async function (keyword) {\n//   app.currentKeyword = keyword;\n//   const keyword = await app.api.get('search/keyword?query=${keyword}');\n//   console.log(keyword);\n//   return keyword;\n// };\n\n// app.getMoviesByKeyWord();\n\napp.getMoviesByKeyWord = async function (keyword) {\n  app.Loading.circle();\n  app.currentKeyword = keyword;\n  const keywordData = await app.api.get(\n    `search/keyword?query=${keyword}&page=${app.currentPage}`\n  );\n  app.Loading.remove();\n\n  if (keywordData.total_results > 0) {\n    app.totalPages = keywordData.total_pages;\n    return keywordData;\n    \n  } else {\n    app.onSearchFailed();\n    return {};\n  }\n\n  Notify.success('Notiflix Test');\n};\n//   app.currentKeyword = keyword;\n\n//   const keywordData = await app.api.get(`search/keyword?query=${keyword}&page${app.currentPage}`);\n\n//   if (keywordData.total_results > 0) {\n//     return keywordData;\n//   } else {\n//     app.onSearchFailed();\n//     throw new Error('No movies found');\n//   }\n// };\n\n// app.getMoviesByKeyWord('keyword');\n","import app from './global/app';\n\nconst formError = document.querySelector('.FormError');\n\napp.onSearchFailed = function () {\n  formError.classList.remove('hidden');\n};\n\napp.onSearchSuccess = function () {\n  formError.classList.add('hidden');\n}\n","import app from './global/app';\n\nconst paginationDiv = document.querySelector('div.pagination');\npaginationDiv.addEventListener(\"click\", onPaginationDivClick);\n\nfunction onPaginationDivClick(event) {\n    const elementWhichWasClicked = event.target;\n    if (elementWhichWasClicked.nodeName === \"BUTTON\") {\n        const buttonId = elementWhichWasClicked.id\n        //\n        if (buttonId === \"left_arrow_btn\") {\n            if (app.currentPage > 1){\n            console.log(\"Poprzednia strona\")\n            app.currentPage = app.currentPage - 1;\n            }\n        } else if (buttonId === \"right_arrow_btn\") {\n            console.log(\"Kolejna strona\")\n            app.currentPage = app.currentPage + 1;\n\n        } else {\n                app.currentPage = elementWhichWasClicked.value;\n        }\n        // sprawdz czy jest w app.currentKeyWord jakas wartosc, jesli tak -> wywołanie fukncji app.getMoviesByKeyWord (app.currentKeyWord)\n            // jesli nie -> wywołanie funkcji app.getMoviesTodayTrends\n        if (app.currentKeyword) {\n            app.getMoviesByKeyWord(app.currentKeyword);\n        } else {\n            app.getMoviesTodayTrends();\n        }\n\n    }}\n\n"],"names":["$bzNN1","parcelRequire","default","getMoviesTodayTrends","async","page","currentPage","galleryULElement","document","getElementById","MOVIE_CARDS_PARENT_ELEMENT_ID","Loading","circle","movies","api","get","console","log","movieCards","showMovieCards","insertAdjacentHTML","remove","totalPages","total_pages","renderMovieCardHTML","movieId","movieObject","poster","poster_path","movieGenres","genre","genres","push","name","movieG","length","movieYear","release_date","split","title","original_title","vote_average","popularity","overview","createMovieCardId","moviesArray","html","movie","results","id","getMoviesByKeyWord","keyword","currentKeyword","keywordData","total_results","onSearchFailed","$b56d99dff7aa96c2$var$formError","querySelector","classList","onSearchSuccess","add","addEventListener","event","elementWhichWasClicked","target","nodeName","buttonId","value","currentWebPage"],"version":3,"file":"index.a6205515.js.map"}