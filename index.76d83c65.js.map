{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,4BAEAE,QAAIC,qBAAuBC,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAC,I,IAAgBC,EACnCC,EAMAC,EAEAC,EAAUC,EAAAC,U,yEATyBL,EAAAI,EAAAE,OAAA,YAAAF,EAAA,GAAsBA,EAAA,GAAfb,EAAAG,QAAIa,YAC9CN,EAAmBO,SAASC,eAChClB,EAAAG,QAAIgB,+BAGNnB,EAAAG,QAAIiB,QAAQC,S,SAESrB,EAAAG,QAAImB,IAAIC,IAAI,sBAA2BC,OAALf,I,cAAjDE,EAAMc,EAAAC,KACZC,QAAQC,IAAIjB,G,SACaX,EAAAG,QAAI0B,eAAelB,G,OAAtCC,EAAUa,EAAAC,KAEhBhB,EAAiBoB,mBAAmB,aAAclB,GAElDZ,EAAAG,QAAIiB,QAAQW,SACZ/B,EAAAG,QAAI6B,WAAarB,EAAOsB,Y,4CAG1BjC,EAAAG,QAAI+B,qB,EAAsB7B,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAC,EAAgB2B,G,IAClCC,EACAC,EACAC,EACAC,EAEDC,EAAAC,EAAAC,EAAAC,EAAAC,EAAMC,EAGPC,EAMEC,EACAC,E,kFAfoBhD,EAAAG,QAAImB,IAAIC,IAAI,SAAWY,G,OAKjD,IALMC,EAAWX,EAAAC,KACXW,EAASD,EAAYa,YACrBX,EAAY,kCACZC,EAAc,GAEfC,GAAW,EAAXC,GAAW,EAAXC,OAAWQ,E,SAAXP,EAAeP,EAAYe,OAAMC,OAAAC,cAAjCb,GAAAI,EAAAD,EAAWW,QAAAC,MAAXf,GAAW,EAALK,EAAND,EAAWY,MACdjB,EAAYkB,KAAKZ,EAAMa,M,kDADpBjB,GAAW,EAAXC,EAAWjB,EAAAkC,G,4BAAXnB,GAAW,MAAXG,EAAWiB,QAAXjB,EAAWiB,S,sBAAXnB,EAAW,C,sBAAXC,E,uEAGDI,EAASP,EAEVO,EADCP,EAAYxB,OAAS,EACd,GAAqBS,OAAlBe,EAAY,GAAG,KAAkBf,OAAfe,EAAY,GAAG,UAEpCA,EAELQ,EAAYX,EAAYyB,aAAaC,MAAM,KAAK,GAChDd,EAAQZ,EAAY2B,eACZ3B,EAAY4B,aACP5B,EAAY6B,WACjB7B,EAAY8B,S,kBAEnB,qCAG+B1C,OAFNxB,EAAAG,QAAIgE,kBAAkBhC,GAAS,gFAEbX,OAAZc,GAGRd,OAHoBa,EAAO,yHAIzBb,OADFwB,EAAM,0CACQxB,OAAZsB,EAAO,OAAetB,OAAVuB,EAAU,kC,qFA5BdZ,G,iCAiC1CnC,EAAAG,QAAI0B,eAAc,W,MAAGxB,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAC,EAAgB4D,G,IAC/BC,EAEC7B,EAAAC,EAAAC,EAAAC,EAAAC,EAAM0B,E,kEAFPD,EAAO,GAEN7B,GAAW,EAAXC,GAAW,EAAXC,OAAWQ,E,SAAXP,EAAeyB,EAAYG,QAAOnB,OAAAC,Y,UAAlCb,GAAAI,EAAAD,EAAWW,QAAAC,KAAA,C,uBAALe,EAAN1B,EAAWY,M,KACda,E,SAAcrE,EAAAG,QAAI+B,oBAAoBoC,EAAME,I,OAA5CH,EAAI5C,EAAAkC,IAAAlC,EAAAC,K,QADDc,GAAW,E,yEAAXC,GAAW,EAAXC,EAAWjB,EAAAgD,G,4BAAXjC,GAAW,MAAXG,EAAWiB,QAAXjB,EAAWiB,S,sBAAXnB,EAAW,C,sBAAXC,E,yFAIE2B,G,4FAP4BD,G,gCAAnB,GASlBpE,EAAAG,QAAIC,uBC7DJF,EAAAD,EAAA,S,4BAWAE,QAAIuE,mBAAkB,W,MAAGrE,EAAAH,EAAA,CAAAG,EAAAC,GAAAC,MAAA,SAAAC,EAAgBmE,G,IAGjCC,E,yEAFN5E,EAAAG,QAAIiB,QAAQC,SACZrB,EAAAG,QAAI0E,eAAiBF,E,SACK3E,EAAAG,QAAImB,IAAIC,IAChC,wBAAwCC,OAAhBmD,EAAQ,UAAwBnD,OAAhBxB,EAAAG,QAAIa,c,UADxC4D,EAAWnD,EAAAC,KAGjB1B,EAAAG,QAAIiB,QAAQW,WAER6C,EAAYE,cAAgB,GAAC,C,uBAC/B9E,EAAAG,QAAI6B,WAAa4C,EAAY3C,Y,kBACtB2C,G,eAGP5E,EAAAG,QAAI4E,iB,kBACG,I,QAGTC,OAAOC,QAAQ,iB,4DAjBwBN,G,gCAAnB,GCXtB3E,EAAAC,EAAA,aAEMiF,EAAYjE,SAASkE,cAAc,cAEzCnF,EAAAG,QAAI4E,eAAiB,WACnBG,EAAUE,UAAUrD,OAAO,S,EAG7B/B,EAAAG,QAAIkF,gBAAkB,WACpBH,EAAUE,UAAUE,IAAI,S,ECT1BtF,EAAAC,EAAA,SAEsBgB,SAASkE,cAAc,kBAC/BI,iBAAiB,SAE/B,SAA8BC,GAC1B,IAAMC,EAAyBD,EAAME,OACrC,GAAwC,WAApCD,EAAuBE,SAAuB,CAC9C,IAAMC,EAAWH,EAAuBjB,GAEvB,mBAAboB,EACI5F,EAAAG,QAAIa,YAAc,IACtBW,QAAQC,IAAI,qBACZ5B,EAAAG,QAAIa,YAAchB,EAAAG,QAAIa,YAAc,GAEhB,oBAAb4E,GACPjE,QAAQC,IAAI,kBACZ5B,EAAAG,QAAIa,YAAchB,EAAAG,QAAIa,YAAc,GAGhChB,EAAAG,QAAIa,YAAcyE,EAAuBjC,MAI7CxD,EAAAG,QAAI0E,eACJ7E,EAAAG,QAAIuE,mBAAmB1E,EAAAG,QAAI0E,gBAE3B7E,EAAAG,QAAIC,sB,2BJzBhBJ,EAAAG,QAAI0F,eAAiB,M","sources":["src/index.js","src/js/gallery.js","src/js/keyword.js","src/js/search-form.js","src/js/pagination-gallery.js"],"sourcesContent":["import app from './js/global/app';\n\napp.currentWebPage = 'home';\n\nimport './js/gallery';\nimport './js/keyword';\nimport './js/search-form';\nimport './js/pagination-gallery';\nimport './js/footer';\nimport './js/movie-window';\n","import app from './global/app';\n\napp.getMoviesTodayTrends = async function (page = app.currentPage) {\n  const galleryULElement = document.getElementById(\n    app.MOVIE_CARDS_PARENT_ELEMENT_ID\n  );\n\n  app.Loading.circle();\n\n  const movies = await app.api.get(`movie/popular?page=${page}`);\n  console.log(movies);\n  const movieCards = await app.showMovieCards(movies);\n\n  galleryULElement.insertAdjacentHTML('afterbegin', movieCards);\n\n  app.Loading.remove();\n  app.totalPages = movies.total_pages;\n};\n\napp.renderMovieCardHTML = async function (movieId) {\n  const movieObject = await app.api.get('movie/' + movieId);\n  const poster = movieObject.poster_path;\n  const posterUrl = 'https://image.tmdb.org/t/p/w500';\n  const movieGenres = [];\n\n  for (const genre of movieObject.genres) {\n    movieGenres.push(genre.name);\n  }\n  let movieG = movieGenres;\n  if (movieGenres.length > 2) {\n     movieG= `${movieGenres[0]},${movieGenres[1]},Other`;\n  } else {\n     movieG= movieGenres;\n  }  \n  const movieYear = movieObject.release_date.split('-')[0];\n  const title = movieObject.original_title;\n  const votes = movieObject.vote_average;\n  const popularity = movieObject.popularity;\n  const about = movieObject.overview;\n\n  return `\n   <li class = \"movie-card\" id=\"${app.createMovieCardId(movieId)}\">\n       <div class=\"movie-thumb\">\n        <img class=\"movie-image\" src=\"${posterUrl}${poster}\" alt=\"Poster image\" loading=\"lazy\" />\n       </div>\n      <div class=\"movie-info\">\n        <p class=\"movie-name\">${title}</p>\n        <p class=\"movie-genres\">${movieG} | ${movieYear}</p>\n      </div>\n    </li>`;\n};\n\napp.showMovieCards = async function (moviesArray) {\n  let html = '';\n\n  for (const movie of moviesArray.results) {\n    html += await app.renderMovieCardHTML(movie.id);\n  }\n\n  return html;\n};\napp.getMoviesTodayTrends();\n","import app from './global/app';\n\n// app.getMoviesByKeyWord = async function (keyword) {\n//   app.currentKeyword = keyword;\n//   const keyword = await app.api.get('search/keyword?query=${keyword}');\n//   console.log(keyword);\n//   return keyword;\n// };\n\n// app.getMoviesByKeyWord();\n\napp.getMoviesByKeyWord = async function (keyword) {\n  app.Loading.circle();\n  app.currentKeyword = keyword;\n  const keywordData = await app.api.get(\n    `search/keyword?query=${keyword}&page=${app.currentPage}`\n  );\n  app.Loading.remove();\n\n  if (keywordData.total_results > 0) {\n    app.totalPages = keywordData.total_pages;\n    return keywordData;\n    \n  } else {\n    app.onSearchFailed();\n    return {};\n  }\n\n  Notify.success('Notiflix Test');\n};\n//   app.currentKeyword = keyword;\n\n//   const keywordData = await app.api.get(`search/keyword?query=${keyword}&page${app.currentPage}`);\n\n//   if (keywordData.total_results > 0) {\n//     return keywordData;\n//   } else {\n//     app.onSearchFailed();\n//     throw new Error('No movies found');\n//   }\n// };\n\n// app.getMoviesByKeyWord('keyword');\n","import app from './global/app';\n\nconst formError = document.querySelector('.FormError');\n\napp.onSearchFailed = function () {\n  formError.classList.remove('hidden');\n};\n\napp.onSearchSuccess = function () {\n  formError.classList.add('hidden');\n}\n","import app from './global/app';\n\nconst paginationDiv = document.querySelector('div.pagination');\npaginationDiv.addEventListener(\"click\", onPaginationDivClick);\n\nfunction onPaginationDivClick(event) {\n    const elementWhichWasClicked = event.target;\n    if (elementWhichWasClicked.nodeName === \"BUTTON\") {\n        const buttonId = elementWhichWasClicked.id\n        //\n        if (buttonId === \"left_arrow_btn\") {\n            if (app.currentPage > 1){\n            console.log(\"Poprzednia strona\")\n            app.currentPage = app.currentPage - 1;\n            }\n        } else if (buttonId === \"right_arrow_btn\") {\n            console.log(\"Kolejna strona\")\n            app.currentPage = app.currentPage + 1;\n\n        } else {\n                app.currentPage = elementWhichWasClicked.value;\n        }\n        // sprawdz czy jest w app.currentKeyWord jakas wartosc, jesli tak -> wywołanie fukncji app.getMoviesByKeyWord (app.currentKeyWord)\n            // jesli nie -> wywołanie funkcji app.getMoviesTodayTrends\n        if (app.currentKeyword) {\n            app.getMoviesByKeyWord(app.currentKeyword);\n        } else {\n            app.getMoviesTodayTrends();\n        }\n\n    }}\n\n"],"names":["$2vAcg","parcelRequire","$bpxeT","default","getMoviesTodayTrends","$parcel$interopDefault","$2TvXO","mark","_callee","page","galleryULElement","movies","movieCards","_args","arguments","length","currentPage","document","getElementById","MOVIE_CARDS_PARENT_ELEMENT_ID","Loading","circle","api","get","concat","_ctx","sent","console","log","showMovieCards","insertAdjacentHTML","remove","totalPages","total_pages","renderMovieCardHTML","movieId","movieObject","poster","posterUrl","movieGenres","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","genre","movieG","movieYear","title","poster_path","undefined","genres","Symbol","iterator","next","done","value","push","name","t0","return","release_date","split","original_title","vote_average","popularity","overview","createMovieCardId","moviesArray","html","movie","results","id","t1","getMoviesByKeyWord","keyword","keywordData","currentKeyword","total_results","onSearchFailed","Notify","success","$b20aa1c1a1ad0048$var$formError","querySelector","classList","onSearchSuccess","add","addEventListener","event","elementWhichWasClicked","target","nodeName","buttonId","currentWebPage"],"version":3,"file":"index.76d83c65.js.map"}